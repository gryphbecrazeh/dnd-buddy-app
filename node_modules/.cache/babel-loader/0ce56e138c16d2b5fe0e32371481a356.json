{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\iscre\\\\dnd-easy\\\\src\\\\components\\\\raceCard\\\\RaceCard.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Button, Card, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nvar RaceCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RaceCard, _Component);\n\n  function RaceCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RaceCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RaceCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoaded: false,\n      races: []\n    };\n    return _this;\n  }\n\n  _createClass(RaceCard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      fetch('http://www.dnd5eapi.co/api/races/').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          races: json.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var races = this.state.races;\n      var raceList = races.map(function (race, index) {\n        fetch(race.url).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          race.expanded = json; // console.log(race);\n        });\n        return React.createElement(Col, {\n          xs: \"12\",\n          lg: \"6\",\n          className: \"my-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"bg-light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, race.name)), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Button, {\n          color: \"primary\",\n          block: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Select \", race.name))));\n      });\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, raceList, function () {\n        if (races[0]) {\n          console.log(races[0].alignment);\n        }\n      });\n    }\n  }]);\n\n  return RaceCard;\n}(Component);\n\nexport default RaceCard;","map":{"version":3,"sources":["C:\\Users\\iscre\\dnd-easy\\src\\components\\raceCard\\RaceCard.jsx"],"names":["React","Component","Row","Col","Button","Card","CardText","CardBody","CardTitle","CardSubtitle","RaceCard","state","isLoaded","races","fetch","then","res","json","setState","results","raceList","map","race","index","url","expanded","name","console","log","alignment"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAgBC,MAAhB,EAAuBC,IAAvB,EAA4BC,QAA5B,EAAqCC,QAArC,EAA8CC,SAA9C,EAAwDC,YAAxD,QAA2E,YAA3E;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAC,KADL;AAEJC,MAAAA,KAAK,EAAC;AAFF,K;;;;;;yCAIY;AAAA;;AAChBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAAC,IADC;AAEVC,UAAAA,KAAK,EAACI,IAAI,CAACE;AAFD,SAAd;AAIH,OAPL;AAQH;;;6BACQ;AAAA,UACEN,KADF,GACW,KAAKF,KADhB,CACEE,KADF;AAEL,UAAMO,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAe;AAClCT,QAAAA,KAAK,CAACQ,IAAI,CAACE,GAAN,CAAL,CACCT,IADD,CACM,UAAAC,GAAG;AAAA,iBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,SADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAE;AACRK,UAAAA,IAAI,CAACG,QAAL,GAAcR,IAAd,CADQ,CAER;AACH,SALD;AAMJ,eACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKK,IAAI,CAACI,IAAV,CAAxB,CADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAKI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,KAAK,EAAE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6CJ,IAAI,CAACI,IAAlD,CALJ,CADJ,CADJ,CADJ;AAaH,OApBgB,CAAjB;AAqBA,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,QADL,EAEK,YAAI;AACD,YAAGP,KAAK,CAAC,CAAD,CAAR,EAAY;AACRc,UAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAAC,CAAD,CAAL,CAASgB,SAArB;AACH;AACJ,OANL,CADJ;AAUH;;;;EAhDkB5B,S;;AAmDvB,eAAeS,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Row,Col,Button,Card,CardText,CardBody,CardTitle,CardSubtitle} from 'reactstrap';\r\n\r\nclass RaceCard extends Component {\r\n    state = {\r\n        isLoaded:false,\r\n        races:[],\r\n    }\r\n    componentWillMount(){\r\n        fetch('http://www.dnd5eapi.co/api/races/')\r\n            .then(res=>res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    races:json.results,\r\n                })\r\n            });\r\n    }\r\n    render() { \r\n        const {races} = this.state;\r\n        const raceList = races.map((race,index) =>{\r\n                fetch(race.url)\r\n                .then(res=>res.json())\r\n                .then(json=>{\r\n                    race.expanded=json;\r\n                    // console.log(race);\r\n                });\r\n            return (\r\n                <Col xs=\"12\" lg=\"6\" className=\"my-5\">\r\n                    <Card className=\"bg-light\">\r\n                        <CardBody>\r\n                            <CardTitle className=\"\"><h4>{race.name}</h4></CardTitle>\r\n                            <CardSubtitle></CardSubtitle>\r\n                            <CardText>\r\n                            </CardText>\r\n                            <Button color=\"primary\" block={true}>Select {race.name}</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            );\r\n        });\r\n        return (\r\n            <Row>\r\n                {raceList}\r\n                {()=>{\r\n                    if(races[0]){\r\n                        console.log(races[0].alignment)\r\n                    }\r\n                }}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RaceCard;"]},"metadata":{},"sourceType":"module"}